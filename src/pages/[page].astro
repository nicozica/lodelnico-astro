---
// Gallery pagination: 3x3 grid with 4:3 aspect ratio images, clean design
import BaseLayout from '../layouts/BaseLayout.astro';
import type { PhotoItem } from '../types/photoblog';

interface Props {
  photos: PhotoItem[];
  currentPage: number;
  totalPages: number;
  hasNextPage: boolean;
  hasPrevPage: boolean;
}

// Generate static paths for all pages (9 items per page)
export async function getStaticPaths() {
  // Import the photoblog data generated at build time
  const photoblogData = await import('../data/photoblog.json');
  const photos = photoblogData.default as PhotoItem[];
  
  const photosPerPage = 9;
  const totalPages = Math.ceil(photos.length / photosPerPage);
  
  return Array.from({ length: totalPages }, (_, i) => {
    const page = i + 1;
    const startIndex = i * photosPerPage;
    const endIndex = startIndex + photosPerPage;
    const pagePhotos = photos.slice(startIndex, endIndex);
    
    return {
      params: { page: page.toString() },
      props: {
        photos: pagePhotos,
        currentPage: page,
        totalPages,
        hasNextPage: page < totalPages,
        hasPrevPage: page > 1
      } satisfies Props
    };
  });
}

// Get props from getStaticPaths
const { photos: pagePhotos, currentPage, totalPages, hasNextPage, hasPrevPage } = Astro.props as Props;
---

<BaseLayout 
  title={`Gallery - Page ${currentPage} - Lo del Nico`}
  description="Personal photography gallery by Nicolas from Buenos Aires, Argentina."
>
  <main class="gallery-container">
    <!-- Photo Grid - Only Images (3x3 layout with 4:3 aspect ratio) -->
    <div class="photo-grid">
      {pagePhotos.map((photo: PhotoItem) => (
        <a 
          href={`/photo/${photo.id}/?from=${currentPage}`} 
          class="photo-link"
          aria-label={photo.title}
        >
          <img 
            src={photo.image} 
            alt={photo.title}
            loading="lazy"
            class="photo-img"
            width="400"
            height="400"
          />
        </a>
      ))}
    </div>
    
    <!-- Simple Pagination -->
    <nav class="pagination" aria-label="Gallery pagination">
      <span class="page-info">
        Page {currentPage} of {totalPages}
      </span>
      <div class="page-controls">
        {hasPrevPage && (
          <a href={`/${currentPage - 1}/`} class="page-btn" aria-label="Previous page">← Prev</a>
        )}
        {hasNextPage && (
          <a href={`/${currentPage + 1}/`} class="page-btn" aria-label="Next page">Next →</a>
        )}
      </div>
    </nav>
  </main>
</BaseLayout>

<style>
  .gallery-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* Photo Grid - Simple 3x3 grid with 4:3 aspect ratio images */
  .photo-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .photo-link {
    display: block;
    aspect-ratio: 4 / 3;
    overflow: hidden;
  }

  .photo-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  /* Pagination */
  .pagination {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
    border-top: 1px solid #e5e7eb;
  }

  .page-info {
    font-size: 0.9rem;
    color: #6b7280;
  }

  .page-controls {
    display: flex;
    gap: 0.5rem;
  }

  .page-btn {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: #f3f4f6;
    color: #374151;
    text-decoration: none;
    border-radius: 4px;
    font-size: 0.9rem;
    transition: background-color 0.2s ease;
  }

  .page-btn:hover {
    background: #e5e7eb;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .gallery-container {
      padding: 1rem;
    }

    .photo-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }
  }

  @media (max-width: 480px) {
    .photo-grid {
      grid-template-columns: 1fr;
    }
    
    .pagination {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>
