---
let apiTest = {};
let error = null;

try {
  // Probar llamada directa a WordPress
  const response = await fetch('https://lodelnico.com/wp-json/wp/v2/posts?per_page=5&_embed=wp:featuredmedia');
  
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  
  const data = await response.json();
  
  apiTest = {
    responseStatus: response.status,
    postsReceived: data.length,
    headers: {
      'x-wp-total': response.headers.get('X-WP-Total'),
      'x-wp-totalpages': response.headers.get('X-WP-TotalPages')
    },
    firstPost: data[0] ? {
      id: data[0].id,
      title: data[0].title.rendered.substring(0, 100),
      hasFeaturedMedia: !!data[0]._embedded?.['wp:featuredmedia']?.[0],
      featuredMediaUrl: data[0]._embedded?.['wp:featuredmedia']?.[0]?.source_url || 'No featured media'
    } : 'No posts found',
    allPostIds: data.map(post => ({ id: post.id, title: post.title.rendered.substring(0, 50) }))
  };
} catch (err: any) {
  error = err.message;
}
---

<!DOCTYPE html>
<html>
<head>
  <title>API Direct Test</title>
  <style>
    body { font-family: monospace; margin: 40px; }
    .error { color: red; }
    .success { color: green; }
    pre { background: #f5f5f5; padding: 20px; overflow-x: auto; }
  </style>
</head>
<body>
  <h1>Test Directo de API WordPress</h1>
  
  {error && (
    <div class="error">
      <h2>❌ Error en llamada directa:</h2>
      <p>{error}</p>
    </div>
  )}
  
  {!error && (
    <div class="success">
      <h2>✅ Llamada directa exitosa</h2>
    </div>
  )}
  
  <h2>Resultado de API:</h2>
  <pre>{JSON.stringify(apiTest, null, 2)}</pre>
  
  <h2>Enlaces:</h2>
  <p>
    <a href="/debug">Debug Simple</a> | 
    <a href="/">Inicio</a> | 
    <a href="https://lodelnico.com/wp-json/wp/v2/posts?per_page=3" target="_blank">API directa</a>
  </p>
</body>
</html>
